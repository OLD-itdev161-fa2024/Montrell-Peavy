let express,Router,connectDatabase,check,validationResult;_7c5‍.w("express",[["default",["express"],function(v){express=v}],["Router",["Router"],function(v){Router=v}]]);_7c5‍.w("./config/db",[["default",["connectDatabase"],function(v){connectDatabase=v}]]);_7c5‍.w("express-validator",[["check",["check"],function(v){check=v}],["validationResult",["validationResult"],function(v){validationResult=v}]]);



const app = express();


connectDatabase();


app.use(express.json({ extended: false}));


/** 
@route
@desc 
*/
app.get('/', (req, res) =>
    res.send('http get request sent to root api endpoint')
);

/** 
@route
@desc 
*/


app.post('/api/users', (req, res) => {
    _7c5‍.g.console.log(req.body);
    res.send(req.body);
});
app.post (
    '/app/users',
    [
        check('name','Please enter your name')
        .not()
        .isEmpty(),
        check('email','Please enter a valid email').isEmail(),
        check(
            'password',
            'Please enter a password with 6 or more characters'
            ).islength( { min: 6})
    ],
    (req, res) => {
        const errors = validationResult(req);
        if (!errors.isEmpty()){
            return res.status(422).json({ errors: errors.array() });
        } else {
            return res.send(req.body);
        }
        
    }
);

app.listen(3000, () => console.log('Express server running on port 3000'));